{"version":3,"sources":["Login.jsx","GetOneArticle.js","ArticleList.js","PostArticle.js","Home.jsx","App.js","withAuth2.jsx","serviceWorker.js","index.js"],"names":["Login","props","handleInputChange","event","target","value","name","setState","onSubmit","preventDefault","fetch","method","body","JSON","stringify","state","headers","then","res","console","log","status","Error","error","history","push","catch","err","alert","email","password","className","this","align","type","placeholder","onChange","required","Component","GetOneArticle","response","response1","params","match","id","json","data","rows","comments","Object","keys","map","item","key","title","article","userid","comment","post_date","React","ArticleList","Amessage","to","createdon","PostArticle","style","width","display","Home","message","message2","text","App","path","exact","component","ComponentToProtect","loading","redirect","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c1693d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Login.css'\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      email : '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch('/api/v1/auth/signin', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log(res.status);\r\n      if (res.status === 200) {\r\n        this.props.history.push('/home');\r\n      } else {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n      alert('Error logging in please try again');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n      <form className=\"Container\" onSubmit={this.onSubmit}>\r\n        <h1>Login Below!</h1>\r\n        <div className=\"table\">\r\n<table align=\"center\" ><tr><td>        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={this.state.email}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        /></td></tr>\r\n       \r\n       <tr><td> <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Enter password\"\r\n          value={this.state.password}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        /></td></tr>\r\n<tr><td>        <input type=\"submit\" value=\"Submit\"/>\r\n    </td></tr></table></div>  </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport './getOneArticle.css'\r\nclass GetOneArticle extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          response: 'Loading...',\r\n          response1: 'Loading...'\r\n\r\n        }\r\n      }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n        fetch(\"/api/v1/articles/\"+params.id)\r\n        .then(res => res.json())\r\n      .then(res => this.setState({response: res.data.rows}));\r\n  \r\n      fetch(\"/api/v1/articles/\"+params.id)\r\n      .then(res => res.json())\r\n    .then(res => this.setState({response1: res.data.comments}));\r\n\r\n      }\r\n  \r\n      \r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"Body\" >      \r\n       <ul>\r\n      {Object.keys(this.state.response).map(item => (\r\n       \r\n       <div className=\"Article-block\" key={item}>\r\n        <div >{this.state.response[item].title}</div><p>{this.state.response[item].article}</p>\r\n          \r\n          </div>\r\n           \r\n        ))}\r\n      </ul>\r\n      <div className=\"comment-title\" >Comments</div>\r\n      <div >\r\n      <ul >\r\n      {Object.keys(this.state.response1).map(item => (\r\n        <div className=\"Comment-block\" key={item}>\r\n       <div className=\"PP\">user:{this.state.response1[item].userid}</div> <p>{this.state.response1[item].comment}</p>\r\n       <div className=\"Pd\">{this.state.response1[item].post_date}</div>   \r\n          </div>\r\n           \r\n        ))}\r\n      </ul>\r\n      </div>\r\n      </div>\r\n    );\r\n   \r\n\r\n  }\r\n}\r\nexport default GetOneArticle","import React from 'react'\r\nimport GetOneArticle from './GetOneArticle';\r\n\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Component } from 'react';\r\nimport './ArticleList.css';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nexport default class ArticleList extends React.Component{\r\n   \r\n\r\n  render(){\r\n   return (\r\n     <div >\r\n         \r\n   \r\n     <ul>\r\n     {Object.keys(this.props.Amessage).map(item => (\r\n       <div className=\"Article-block\" key={item}>\r\n       <div className=\"profile\">user: {this.props.Amessage[item].userid}</div>\r\n       <div className=\"Article-title\">{this.props.Amessage[item].title}</div>\r\n\r\n        <div className=\"Article-main\">{this.props.Amessage[item].article}</div>\r\n         <br/><Link className=\"view\" to={`/articles/${this.props.Amessage[item].id}`} >view\r\n         </Link> <Link className=\"comment\" to={`/articles/${this.props.Amessage[item].id}`}>comments</Link>\r\n              <div>{this.props.Amessage[item].createdon}</div>\r\n \r\n         </div>\r\n          \r\n       ))}\r\n     </ul>\r\n     </div>\r\n   );\r\n       }\r\n       }\r\n       ","import React, { Component } from 'react';\r\n\r\nexport default class PostArticle extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n     title : '',\r\n      article: '',\r\n      status: ''\r\n    };\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { value, name } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch('/api/v1/articles', {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.status === 201) {\r\n        this.setState({\r\n            status: 'Success'\r\n        });\r\n      } else {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n      alert('Posting Error');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <div className='Post-form' style={{width:'20px', display:''}}>\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"input\"\r\n          name=\"title\"\r\n          placeholder=\"title\"\r\n          value={this.state.title}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"input\"\r\n          name=\"article\"\r\n          placeholder=\"Article\"\r\n          value={this.state.article}\r\n          onChange={this.handleInputChange}\r\n          required\r\n        />\r\n                {this.state.status}\r\n      <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          onChange={this.handleInputChange}\r\n          \r\n        />\r\n        <input type=\"submit\" value=\"Post\"/>\r\n\r\n  \r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { green, visible } from 'ansi-colors';\r\nimport './Home.css';\r\nimport ArcticleList from './ArticleList'\r\nimport PostArticle from './PostArticle';\r\n\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      message: 'Loading...',\r\n      message2: 'ddd'\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n  \r\n    fetch('/api/v1/articles')\r\n      .then(res => res.json())\r\n      .then(res => this.setState({message: res.rows}));\r\n      fetch('/api/v1/articles/2')\r\n      .then(res => res.text())\r\n      .then(res => this.setState({message2: res}));\r\n  \r\n     \r\n  }\r\n\r\n  \r\n    render() {\r\n \r\n    return (\r\n      <div className='container'>\r\n        <div className=\"Menu-block\">\r\n          Board\r\n          <div className=\"Menu-list\">\r\n          <li >private message</li>\r\n          <li >Current Sprint</li>\r\n          </div>\r\n        </div>\r\n      <div className=\"Articles-block\">\r\n        <ArcticleList Amessage={this.state.message}/>\r\n      </div>\r\n        <div className=\"Search-block\">\r\n         </div>\r\n         <div className='Post-article' >\r\n         <  PostArticle/>\r\n           </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Home from './Home'\r\nimport GetOneArticle from './GetOneArticle'\r\nimport withAuth from './withAuth';\r\nimport withAuth2 from './withAuth2';\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <h1> TeamWork</h1>\r\n      </header>\r\n     \r\n      \r\n        \r\n      <div>\r\n      \r\n        <Switch>\r\n        <Route path=\"/\" exact component={(Login)} />\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/home\" component={withAuth2(Home)} />\r\n          <Route path=\"/articles/:id\" component={(GetOneArticle)} />\r\n          <Route path=\"/feeds\" component={(Home)} />\r\n\r\n        </Switch>\r\n      </div>\r\n \r\n      \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function withAuth(ComponentToProtect) {\r\n  return class extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch('/api/v1/checkToken')\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to=\"/feeds\" />;\r\n      }\r\n      return <ComponentToProtect {...this.props} />;\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n  \r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}